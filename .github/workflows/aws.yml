name: Deploy to AWS ECR and ECS

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up the TAG environment variable
      - name: Set up the TAG environment variable
        id: tag
        run: |
          TAG=$(git rev-parse --short=4 HEAD)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "TAG=$TAG"  # Output TAG value for debugging

      # Set up AWS credentials (Make sure you add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY as secrets in your GitHub repo)
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 135581164469.dkr.ecr.us-east-1.amazonaws.com

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t andre/andreapp3 .

      # Tag the image for ECR
      - name: Tag docker image with $TAG
        run: |
          echo "Tagging image with $TAG"
          docker tag andre/andreapp3:latest 135581164469.dkr.ecr.us-east-1.amazonaws.com/andre/andre:ecsimage${TAG}

      # Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          echo "Pushing image to ECR"
          docker push 135581164469.dkr.ecr.us-east-1.amazonaws.com/andre/andre:ecsimage${TAG}


  update-ecs-task-definition:
      runs-on: self-hosted
      needs: build-and-deploy  # This stage depends on the successful completion of the build-and-deploy job
      steps:
        # Update ECS Task Definition with the new tag
        - name: Update ECS Task Definition
          run: |
            aws ecs register-task-definition \
              --family my-ecs-task \
              --container-definitions "[{
                \"name\": \"dockergs\",
                \"image\": \"135581164469.dkr.ecr.us-east-1.amazonaws.com/andre/andre:ecsimage${TAG}\",
                \"cpu\": 256,
                \"memory\": 512,
                \"essential\": true,
                \"portMappings\": [{\"containerPort\": 5000, \"hostPort\": 5000, \"protocol\": \"tcp\"}]
              }]"
 
  update-ecs-service:
      runs-on: self-hosted
      needs: update-ecs-task-definition  # This stage depends on the successful completion of the update-ecs-task-definition job
      steps:
        # Update ECS service to use the new task definition
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ecsCluster1 \
            --service my-ecs-service \
            --task-definition my-ecs-task